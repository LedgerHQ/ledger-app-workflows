name: Get app manifest

on:
  workflow_call:
    inputs:
      ledger-app-workflows_ref:
        description: 'The current reference in use for the ledger-app-workflow repository'
        required: true
        type: string
      run_for_devices:
        description: 'The list of device(s) on which the checking will run'
        required: true
        type: string
      relative_app_directory:
        description: 'The relative path in the repository where the application is built from (defaults to ".")'
        required: false
        default: .
        type: string
      is_rust:
        description: '"true" if the app is using Rust SDK, else "false"'
        required: true
        type: string
      upload_manifest_artifact_name:
        description: 'The name of the artifact containing the built manifest'
        required: true
        type: string

jobs:
  get_app_manifest:
    name: Get application manifest for supported devices
    strategy:
      fail-fast: false
      matrix:
        device: ${{ fromJSON(inputs.run_for_devices) }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone workflows repository
        uses: actions/checkout@v3
        with:
          repository: LedgerHQ/ledger-app-workflows
          path: ./ledger-app-workflows
          ref: ${{ inputs.ledger-app-workflows_ref }}

      - name: Clone app repository
        uses: actions/checkout@v3
        with:
          path: app-repository
          submodules: recursive

      - name: Call Cargo metadata dumper script
        if: ${{ inputs.is_rust == 'true'}}
        run: |
          cd app-repository && \
          BOLOS_SDK=${BOLOS_SDK} python ../ledger-app-workflows/scripts/cargo_metadata_dump.py \
              --device ${{ matrix.device }} \
              --app_build_path ${{ inputs.relative_app_directory }} \
              --json_path ../manifest_${{ matrix.device }}.json

      - name: Call Makefile dumper script
        if: ${{ inputs.is_rust == 'false'}}
        run: |
          cd app-repository && \
          eval "BOLOS_SDK=\$$(echo ${{ matrix.device }} | tr [:lower:] [:upper:])_SDK" && \
          echo "BOLOS_SDK value will be: ${BOLOS_SDK}" && \
          BOLOS_SDK=${BOLOS_SDK} python ../ledger-app-workflows/scripts/makefile_dump.py \
              --app_build_path ${{ inputs.relative_app_directory }} \
              --json_path ../manifest_${{ matrix.device }}.json

      - name: Upload app manifest
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.upload_manifest_artifact_name }}
          path: ./manifest_*.json
          if-no-files-found: error
