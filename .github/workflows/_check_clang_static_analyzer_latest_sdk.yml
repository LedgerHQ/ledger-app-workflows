name: Run Clang Static Analyzer (master SDK)

on:
  workflow_call:
    inputs:
      ledger-app-workflows_ref:
        description: 'The current reference in use for the ledger-app-workflow repository'
        required: true
        type: string
      app-repository:
        description: 'The URL of the app repository to check. Defaults to the workflow caller repository URL'
        required: false
        default: ${{ github.repository }}
        type: string
      run_for_devices:
        description: 'The list of device(s) on which the checking will run'
        required: true
        type: string
      relative_app_directory:
        description: 'The relative path in the repository where the application is built from (defaults to ".")'
        required: false
        default: '.'
        type: string
      is_rust:
        description: '"true" if the app is using Rust SDK, else "false"'
        required: true
        type: string

jobs:
  scan_build:
    name: Clang Static Analyzer on master
    strategy:
      fail-fast: false
      matrix:
        device: ${{ fromJSON(inputs.run_for_devices) }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone ledger-app-workflows repository
        uses: actions/checkout@v4
        with:
          repository: LedgerHQ/ledger-app-workflows
          path: ./ledger-app-workflows
          ref: ${{ inputs.ledger-app-workflows_ref }}

      - name: Clone app repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.app-repository }}
          path: app-repository
          submodules: recursive

      - name: Clone SDK
        uses: actions/checkout@v4
        with:
          repository: LedgerHQ/ledger-secure-sdk
          path: sdk
          ref: master

      - name: Build with Clang Static Analyzer
        if: ${{ inputs.is_rust == 'false'}}
        run: |
            BOLOS_SDK=${GITHUB_WORKSPACE}/sdk && \
            ./ledger-app-workflows/scripts/check_all.sh -c scan -t ${{ matrix.device }} \
              -a ./app-repository -b ${{ inputs.relative_app_directory }}

      - name: Upload scan result
        if: failure() && ${{ inputs.is_rust == 'false'}}
        uses: actions/upload-artifact@v4
        with:
          name: scan-build
          path: scan-build
