name: Build, check and deploy an package on pypi.org or test.pypi.org

on:
  workflow_call:
    inputs:
      package_name:
        description: The name of the package.
        required: true
        type: string
      package_directory:
        description: The directory where the Python package lies (where the setup.py or setup.cfg or
                     pyproject.toml can be found)
        type: string
        default: .
      publish:
        description: Whether the package should be published or not
        required: true
        type: boolean
      release:
        description: Whether the package should be packaged as a release or not
        required: false
        type: boolean
        default: true
      jfrog_deployment:
        description: If the Python package should be pushed on Ledger Jfrog or not.
                     Ignored if `publish` is `false`.
        type: boolean
        required: false
        default: true
    secrets:
      pypi_token:
        description: A token enabling to push a package on pypi.org or test.pypi.org
        required: true


jobs:
  package_and_deploy:
    name: Build and deploy a Python Package
    runs-on: public-ledgerhq-shared-small
    permissions:
      id-token: write
      attestations: write
      contents: write
    steps:

      - name: Clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Python package
        run: |
          # Needed to workaround this bug https://github.com/pypa/setuptools/issues/4759
          # To be removed when it's fixed
          pip install -U packaging
          pip install --upgrade pip build twine
          cd ${{ inputs.package_directory }}
          python -m build
          pip install .
          python -m twine check dist/*
          echo "TAG_VERSION=$(python -c 'from ${{ inputs.package_name }} import __version__; print(__version__)')" >> "$GITHUB_ENV"

      - name: Display current status
        run: |
          echo "- Tag version: ${{ env.TAG_VERSION }}"

      - name: Check version against CHANGELOG
        if: ${{ success() && inputs.publish }}
        run: |
          cd ${{ inputs.package_directory }}
          CHANGELOG_VERSION=$(grep -Po '(?<=## \[)(\d+\.)+[^\]]' CHANGELOG.md | head -n 1)
          if [ "${{ env.TAG_VERSION }}" == "${CHANGELOG_VERSION}" ]
          then
              exit 0
          fi
          echo "Tag '${{ env.TAG_VERSION }}' and CHANGELOG '${CHANGELOG_VERSION}' versions mismatch!"
          exit 1

      - name: Publish Python package on pypi.org
        if: ${{ success() && inputs.publish }}
        run: python -m twine upload ${{ inputs.package_directory }}/dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_token  }}
          TWINE_NON_INTERACTIVE: 1

      - name: Login to Ledger Artifactory
        if: ${{ success() && inputs.publish && inputs.jfrog_deployment }}
        timeout-minutes: 10
        id: jfrog-login
        uses: LedgerHQ/actions-security/actions/jfrog-login@actions/jfrog-login-1

      - name: Publish Python package on Ledger Artifactory
        if: ${{ success() && inputs.publish && inputs.jfrog_deployment }}
        run: python -m twine upload ${{ inputs.package_directory }}/dist/*
        env:
          TWINE_REPOSITORY_URL: https://jfrog.ledgerlabs.net/artifactory/api/pypi/embedded-apps-pypi-prod-green
          TWINE_USERNAME: ${{ steps.jfrog-login.outputs.oidc-user }}
          TWINE_PASSWORD: ${{ steps.jfrog-login.outputs.oidc-token }}
          TWINE_NON_INTERACTIVE: 1

      - name: Generate library build attestations
        if: ${{ success() && inputs.publish && inputs.jfrog_deployment }}
        timeout-minutes: 10
        uses: LedgerHQ/actions-security/actions/attest@actions/attest-1
        with:
          subject-path: ${{ inputs.package_directory }}/dist/*

      - name: Sign library artifacts
        if: ${{ success() && inputs.publish && inputs.jfrog_deployment }}
        timeout-minutes: 10
        uses: LedgerHQ/actions-security/actions/sign-blob@actions/sign-blob-1
        with:
          path: ${{ inputs.package_directory }}/dist

      - name: Publish a release on the repo
        if: ${{ success() && inputs.publish && inputs.release }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.TAG_VERSION }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false
          files: |
            LICENSE
            CHANGELOG.md
            ${{ inputs.package_directory }}/dist/*
