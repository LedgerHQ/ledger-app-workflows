name: Ensure app compliance with Ledger guidelines

on:
  workflow_call:
    inputs:
      run_for_devices:
        description: 'The list of device(s) on which the checking will run (defaults to ["nanos", "nanox", "nanosp", "stax"])'
        required: false
        default: '["nanos", "nanox", "nanosp", "stax"]'
        type: string
      relative_app_directory:
        description: 'The relative path in the repository where the application is built from (defaults to ".")'
        required: false
        default: '.'
        type: string
    secrets:
      git_token:
        description: 'A token used as authentication for GIT operations. Useful when including this workflow in a private repository.'
        required: false

jobs:
  # We can't simply know the current ledger-app-workflow ref from inside the reusable workflow
  # We use the workaround linked in the following Github issue until a proper API is available at Github API level
  # https://github.com/actions/toolkit/issues/1264
  call_get_workflow_version:
    name: Get workflow version
    uses: ./.github/workflows/_get_workflow_version.yaml
    with:
      repository-name: LedgerHQ/ledger-app-workflows
      file-name: reusable_guidelines_enforcer.yml
    secrets:
      git_token: ${{ secrets.git_token }}

  call_check_is_rust:
    name: Check if app is based on Rust
    uses: ./.github/workflows/_check_is_rust.yaml
    with:
      relative_app_directory: ${{ inputs.relative_app_directory }}

  call_get_app_manifest:
    name: Dump app information
    needs: [call_get_workflow_version, call_check_is_rust]
    uses: ./.github/workflows/_get_app_manifest.yml
    with:
      ledger-app-workflows_ref: ${{ needs.call_get_workflow_version.outputs.version }}
      run_for_devices: ${{ inputs.run_for_devices }}
      relative_app_directory: ${{ inputs.relative_app_directory }}
      is_rust:  ${{ needs.call_check_is_rust.outputs.is_rust }}
      upload_manifest_artifact_name: manifests

  call_check_icons:
    name: Dispatch check
    needs: [call_get_workflow_version, call_get_app_manifest]
    uses: ./.github/workflows/_check_icons.yml
    with:
      download_manifest_artifact_name: manifests
      ledger-app-workflows_ref: ${{ needs.call_get_workflow_version.outputs.version }}

  call_check_app_load_params:
    name: Dispatch check
    needs: [call_get_workflow_version, call_get_app_manifest]
    uses: ./.github/workflows/_check_app_load_params.yml
    with:
      download_manifest_artifact_name: manifests
      ledger-app-workflows_ref: ${{ needs.call_get_workflow_version.outputs.version }}

  call_check_makefile:
    name: Dispatch check
    needs: [call_get_workflow_version, call_get_app_manifest]
    uses: ./.github/workflows/_check_makefile.yml
    with:
      download_manifest_artifact_name: manifests
      ledger-app-workflows_ref: ${{ needs.call_get_workflow_version.outputs.version }}

  call_check_readme:
    name: Dispatch check
    needs: call_get_workflow_version
    uses: ./.github/workflows/_check_readme.yml
    with:
      ledger-app-workflows_ref: ${{ needs.call_get_workflow_version.outputs.version }}

  call_clang_static_analyzer:
    name: Dispatch check
    needs: call_check_is_rust
    uses: ./.github/workflows/_check_clang_static_analyzer.yml
    with:
      run_for_devices: ${{ inputs.run_for_devices }}
      relative_app_directory: ${{ inputs.relative_app_directory }}
      is_rust: ${{ needs.call_check_is_rust.outputs.is_rust }}
