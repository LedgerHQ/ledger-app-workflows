name: Run Clang Static Analyzer

on:
  workflow_call:
    inputs:
      workflows_ref:
        description: 'The current reference in use for the ledger-app-workflow repository'
        required: true
        type: string
      app_repository:
        description: 'The URL of the app repository to check. Defaults to the workflow caller repository URL'
        required: false
        default: ${{ github.repository }}
        type: string
      run_for_devices:
        description: 'The list of device(s) on which the checking will run'
        required: true
        type: string
      relative_app_directory:
        description: 'The relative path in the repository where the application is built from (defaults to ".")'
        required: false
        default: '.'
        type: string
      is_rust:
        description: '"true" if the app is using Rust SDK, else "false"'
        required: true
        type: string

permissions:
  contents: read  # Needed to clone the repositories
  actions: write  # Needed for upload-artifact

env:
  WORKFLOWS_REF: ${{ inputs.workflows_ref }}
  APP_REPOSITORY: ${{ inputs.app_repository }}
  RUN_FOR_DEVICES: ${{ inputs.run_for_devices }}
  RELATIVE_APP_DIRECTORY: ${{ inputs.relative_app_directory }}
  IS_RUST: ${{ inputs.is_rust }}

jobs:
  scan_build:
    name: Clang Static Analyzer
    strategy:
      fail-fast: false
      matrix:
        device: ${{ fromJSON(inputs.run_for_devices) }}
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone ledger-app-workflows repository
        uses: actions/checkout@v4
        with:
          repository: LedgerHQ/ledger-app-workflows
          path: ./ledger-app-workflows
          ref: ${{ inputs.workflows_ref }}

      - name: Clone app repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.app_repository }}
          path: app-repository
          submodules: recursive

      - name: Check Rust SDK version
        if: ${{ inputs.is_rust == 'true'}}
        run: |
            ./ledger-app-workflows/scripts/check_rust_sdk.sh "./app-repository/${RELATIVE_APP_DIRECTORY}"

      - name: Run Clippy
        if: ${{ inputs.is_rust == 'true'}}
        run: |
            ./ledger-app-workflows/scripts/check_all.sh -r -c scan -t "${{ matrix.device }}" \
              -a ./app-repository -b "${RELATIVE_APP_DIRECTORY}"

      - name: Build with Clang Static Analyzer
        if: ${{ inputs.is_rust == 'false'}}
        run: |
            eval "BOLOS_SDK=\$$(echo ${{ matrix.device }} | tr '[:lower:]' '[:upper:]')_SDK" && \
            ./ledger-app-workflows/scripts/check_all.sh -c scan -t "${{ matrix.device }}" \
              -a ./app-repository -b "${RELATIVE_APP_DIRECTORY}"

      - name: Upload scan result
        if: ${{ failure() && inputs.is_rust == 'false'}}
        uses: actions/upload-artifact@v5
        with:
          name: scan-build
          path: scan-build
