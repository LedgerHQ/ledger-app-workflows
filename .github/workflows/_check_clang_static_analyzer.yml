name: Run Clang Static Analyzer

on:
  workflow_call:
    inputs:
      run_for_devices:
        description: 'The list of device(s) on which the checking will run'
        required: true
        type: string
      relative_app_directory:
        description: 'The relative path in the repository where the application is built from (defaults to ".")'
        required: false
        default: '.'
        type: string
      is_rust:
        description: '"true" if the app is using Rust SDK, else "false"'
        required: true
        type: string

jobs:
  scan_build:
    name: Clang Static Analyzer
    strategy:
      fail-fast: false
      matrix:
        device: ${{ fromJSON(inputs.run_for_devices) }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Run Clippy
        if: ${{ inputs.is_rust == 'true'}}
        run: |
          cd ${{ inputs.relative_app_directory }} && \
          DEVICE_NAME="$(echo ${{ matrix.device }} | sed 's/nanosp/nanosplus/')" && \
          cargo clippy --target ${DEVICE_NAME} -- -Dwarnings

      - name: Build with Clang Static Analyzer
        if: ${{ inputs.is_rust == 'false'}}
        run: |
          eval "BOLOS_SDK=\$$(echo ${{ matrix.device }} | tr [:lower:] [:upper:])_SDK" && \
          echo "BOLOS_SDK value will be: ${BOLOS_SDK}" && \
          make -C ${{ inputs.relative_app_directory }} -j ENABLE_SDK_WERROR=1 BOLOS_SDK=${BOLOS_SDK} scan-build

      - name: Upload scan result
        if: failure() && ${{ inputs.is_rust == 'false'}}
        uses: actions/upload-artifact@v3
        with:
          name: scan-build
          path: scan-build
