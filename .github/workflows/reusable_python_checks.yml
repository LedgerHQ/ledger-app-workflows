name: Code style check

on:
  workflow_call:
    inputs:
      app_repository:
        description: 'The GIT repository to test (defaults to `github.repository`)'
        required: false
        default: ${{ github.repository }}
        type: string
      app_branch_name:
        description: 'The GIT branch to test (defaults to `github.ref`)'
        required: false
        default: ${{ github.ref }}
        type: string
      run_linter:
        description: "Select the Linter to run (pylint, flake8 or yapf)"
        type: string
        required: true
        default: ''
      run_type_check:
        description: "Whether to run mypy type check (defaults to false)"
        required: true
        default: false
        type: boolean
      src_directory:
        description: "The directory containing the python sources to check"
        required: true
        default: ''
        type: string
      req_directory:
        description: "The directory containing the requirements.txt (if any)"
        required: false
        default: ''
        type: string
      setup_directory:
        description: "The directory containing the setup.cfg (if any)"
        required: false
        default: ''
        type: string
      additional_packages:
        description: "Additional packages to install (default to none)"
        required: false
        default: ''
        type: string

permissions:
  contents: read

env:
  APP_REPOSITORY: ${{ inputs.app_repository }}
  APP_BRANCH_NAME: ${{ inputs.app_branch_name }}
  RUN_LINTER: ${{ inputs.run_linter }}
  RUN_TYPE_CHECK: ${{ inputs.run_type_check }}
  SRC_DIRECTORY: ${{ inputs.src_directory }}
  REQ_DIRECTORY: ${{ inputs.req_directory }}
  SETUP_DIRECTORY: ${{ inputs.setup_directory }}
  ADDITIONAL_PACKAGES: ${{ inputs.additional_packages }}

jobs:
  linter:
    name: Python Linting with ${{ inputs.run_linter }}
    runs-on: ubuntu-latest
    steps:
      - name: Installing required packages
        if: ${{ inputs.additional_packages != '' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y ${ADDITIONAL_PACKAGES}

      - name: Clone
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.app_repository }}
          ref: ${{ inputs.app_branch_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Installing Python dependencies
        run: |
          python -m pip install --upgrade pip

          # Install linter
          case "${RUN_LINTER}" in
            "pylint") pip install pylint ;;
            "flake8") pip install flake8 flake8-pyproject ;;
            "yapf") pip install yapf ;;
          esac

          # Install project requirements
          if [ -n "${REQ_DIRECTORY}" ] && [ -f "${REQ_DIRECTORY}/requirements.txt" ]; then
            pip install -r ${REQ_DIRECTORY}/requirements.txt
          fi

      - name: Change to setup directory
        if: ${{ inputs.setup_directory != '' }}
        run: echo "WORK_DIR=${{ env.SETUP_DIRECTORY }}" >> $GITHUB_ENV

      - name: Run ${{ inputs.run_linter }}
        working-directory: ${{ env.WORK_DIR || '.' }}
        run: |
          case "${RUN_LINTER}" in
            "pylint")
              ARGS=(-j 0)
              if [ -f "./setup.cfg" ]; then
                ARGS+=(--rcfile "./setup.cfg")
              fi
              pylint "${ARGS[@]}" ${SRC_DIRECTORY}
              ;;
            "flake8")
              flake8 ${SRC_DIRECTORY}
              ;;
            "yapf")
              yapf ${SRC_DIRECTORY} --recursive -d
              ;;
          esac

  mypy:
    name: Type checking
    if: ${{ inputs.run_type_check == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Installing required packages
        if: ${{ inputs.additional_packages != '' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y ${ADDITIONAL_PACKAGES}

      - name: Clone
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.app_repository }}
          ref: ${{ inputs.app_branch_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Installing Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mypy
          if [ -n "${REQ_DIRECTORY}" ] && [ -f "${REQ_DIRECTORY}/requirements.txt" ]; then
            pip install -r ${REQ_DIRECTORY}/requirements.txt
          fi

      - name: Change to setup directory
        if: ${{ inputs.setup_directory != '' }}
        run: echo "WORK_DIR=${{ env.SETUP_DIRECTORY }}" >> $GITHUB_ENV

      - name: Mypy type checking
        working-directory: ${{ env.WORK_DIR || '.' }}
        run: |
          mypy ${SRC_DIRECTORY}
