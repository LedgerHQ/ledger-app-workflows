# Copyright 2023 Canonical Ltd.
# See APACHE_2_LICENSE file for licensing details.

# Get ref (branch, tag, or commit) for a reusable workflow
#
# Workaround for https://github.com/actions/toolkit/issues/1264
#
# When a reusable workflow is called, the `github` context is always associated with the caller workflow
# https://docs.github.com/en/actions/using-workflows/reusing-workflows#overview
# If a reusable workflow needs to checkout files (e.g. a Python script) from its repository
# —instead of the repository of the caller workflow—
# it needs to know what version it was called with.
#
# Example:
# calling-workflow.yaml
# ---
# jobs:
#   build:
#     name: Build charms
#     uses: canonical/data-platform-workflows/.github/workflows/build_charms_with_cache.yaml@1.0
#
# In this example, the reusable workflow `build_charms_with_cache.yaml` is called with ref "1.0".
# This workflow would output "1.0".

on:
  workflow_call:
    inputs:
      repository-name:
        description: Name of reusable workflow repository (e.g. "canonical/data-platform-workflows")
        required: true
        type: string
      file-name:
        description: Name of reusable workflow file (e.g. "build_charms_with_cache.yaml")
        required: true
        type: string
    secrets:
      git_token:
        description: 'A token used as authentication for GIT operations. Useful when including this workflow in a private repository.'
        required: false
    outputs:
      version:
        description: Version of reusable workflow
        value: ${{ jobs.get-version.outputs.version }}

jobs:
  get-version:
    name: Get workflow version
    runs-on: ubuntu-latest
    steps:
      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: ${{ inputs.repository-name }}
          file-name: ${{ inputs.file-name }}
          github-token: ${{ secrets.git_token }}

    outputs:
      version: ${{ steps.workflow-version.outputs.sha }}
